{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "ProtoBuf",
    "require",
    "etc",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "loadingBar",
    "ProgressBar",
    "tips",
    "Label",
    "_isLoading",
    "_stateStr",
    "_loadkey",
    "_loadingList",
    "String",
    "onLoad",
    "sys",
    "isNative",
    "isMobile",
    "cvs",
    "node",
    "getComponent",
    "Canvas",
    "fitHeight",
    "fitWidth",
    "totalLength",
    "width",
    "ll",
    "net",
    "init",
    "loader",
    "loadRes",
    "err",
    "arr",
    "pb",
    "protoFromString",
    "msgbox",
    "notice",
    "onLoadNext",
    "onLoadComplete",
    "director",
    "loadScene",
    "onComplete",
    "length",
    "name",
    "startPreloading",
    "self",
    "onProgress",
    "completedCount",
    "totalCount",
    "item",
    "_progress",
    "progress",
    "loadResDir",
    "assets",
    "update",
    "dt",
    "string",
    "Math",
    "floor",
    "t",
    "Date",
    "now",
    "i"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var ProtoBuf = require(\"protobuf\")\nvar etc = require(\"etc\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        loadingBar: cc.ProgressBar,\n        tips: cc.Label,\n\n        _isLoading : false,\n        _stateStr:\"\",\n        _loadkey : 0,\n        _loadingList:[cc.String],\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        if(!cc.sys.isNative && cc.sys.isMobile){\n            var cvs = this.node.getComponent(cc.Canvas);\n            cvs.fitHeight = true;\n            cvs.fitWidth = true;\n        }\n        this.loadingBar.totalLength = this.loadingBar.node.width;\n\n        cc.ll = {};\n        // 初始化网络\n        cc.ll.net = require(\"Lwebsocket\");\n        cc.ll.net.init();\n\n        // cc.ll.common = require(\"Common\");\n\n        cc.loader.loadRes(\"gamebox\", function (err, arr){\n            cc.ll.pb = ProtoBuf.protoFromString(arr); \n        });\n        // common.init();\n        //cc.ll.msgbox;//初始化弹窗\n        cc.ll.msgbox = require(\"Msgbox\");\n        cc.ll.notice = require(\"Notice\");\n        cc.ll.notice.init();\n\n        this._loadingList = [\"loading\",\"erguotou\",\"login\",\"main\",\"profab\",\"res_common\"];\n        this.onLoadNext();\n    },\n\n    onLoadComplete:function(){\n        this._isLoading = false;\n        this._stateStr = \"准备登陆\";\n        cc.director.loadScene(\"loginview\");\n        cc.loader.onComplete = null;\n    },\n\n    onLoadNext : function () {\n        if(this._loadkey >= this._loadingList.length){\n            this.onLoadComplete();\n        }else{\n            var name = this._loadingList[ this._loadkey ];\n            this.startPreloading( name );\n        }\n        this._loadkey = this._loadkey + 1;\n    },\n\n    startPreloading:function(name){\n        this._stateStr = \"正在加载\"+name+\"，请稍候\";\n        this._isLoading = true;\n        var self = this;\n        \n        cc.loader.onProgress = function ( completedCount, totalCount,  item ){\n            // console.log(\"completedCount:\" + completedCount + \",totalCount:\" + totalCount );\n            if(self._isLoading){\n                self._progress = completedCount/totalCount;\n                self.loadingBar.progress = self._progress;\n            }\n        };\n        \n        cc.loader.loadResDir(name, function (err, assets) {\n            self.onLoadNext();\n        });      \n    },\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if(this._stateStr.length == 0){\n            return;\n        }\n        this.tips.string = this._stateStr + ' ';\n        if(this._isLoading){\n            this.tips.string += Math.floor(this._progress * 100) + \"%\";   \n        }\n        else{\n            var t = Math.floor(Date.now() / 1000) % 4;\n            for(var i = 0; i < t; ++ i){\n                this.tips.string += '.';\n            }            \n        }\n    }\n});\n"
  ]
}