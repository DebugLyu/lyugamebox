{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "common",
    "require",
    "msgbox",
    "msgcode",
    "packet",
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "prefabNormalRegister",
    "default",
    "type",
    "Prefab",
    "accountBox",
    "EditBox",
    "passwordBox",
    "rememberCheckBox",
    "Toggle",
    "onLoad",
    "account",
    "sys",
    "localStorage",
    "getItem",
    "password",
    "string",
    "onNormalRegisterClick",
    "bg",
    "find",
    "registerlayer",
    "instantiate",
    "parent",
    "setPosition",
    "onDistroy",
    "node",
    "destroy",
    "onLoginClick",
    "length",
    "ll",
    "addMsg",
    "ACCOUNT_TOO_LONG",
    "isChecked",
    "setItem",
    "p",
    "lpack",
    "net",
    "send",
    "pack"
  ],
  "mappings": ";;AAAA;AACA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;AACA,IAAIE,UAAUF,QAAS,SAAT,CAAd;AACA,IAAIG,SAASH,QAAS,UAAT,CAAb;;AAEAI,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,8BAAqB;AACjBC,qBAAS,IADQ;AAEjBC,kBAAMP,GAAGQ;AAFQ,SADb;;AAMRC,oBAAa;AACZH,qBAAU,IADE;AAEZC,kBAAMP,GAAGU;AAFG,SANL;;AAWRC,qBAAc;AACbL,qBAAU,IADG;AAEbC,kBAAMP,GAAGU;AAFI,SAXN;;AAgBRE,0BAAmBZ,GAAGa;;AAhBd,KAHP;AAsBLC,YAAO,kBAAW;AACjB,YAAIC,UAAUf,GAAGgB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,CAAd;AACA,YAAIC,WAAWnB,GAAGgB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAf;AACA,YAAIH,WAAW,IAAX,IAAmBA,WAAW,EAAlC,EAAqC;AACpC,iBAAKN,UAAL,CAAgBW,MAAhB,GAAyBL,OAAzB;AACA,iBAAKJ,WAAL,CAAiBS,MAAjB,GAA0BD,QAA1B;AACA;AACD,KA7BI;AA8BLE,2BAAsB,iCAAU;AAC5B,YAAIC,KAAKtB,GAAGuB,IAAH,CAAQ,SAAR,CAAT;AACA,YAAIC,gBAAgBxB,GAAGyB,WAAH,CAAe,KAAKpB,oBAApB,CAApB;AACAmB,sBAAcE,MAAd,GAAuBJ,EAAvB;AACAE,sBAAcG,WAAd,CAA0B,CAA1B,EAA4B,CAA5B;AACH,KAnCI;;AAqCLC,eAAU,qBAAU;AACnB,aAAKC,IAAL,CAAUC,OAAV;AACA,KAvCI;;AAyCLC,kBAAc,wBAAW;AACxB,YAAIhB,UAAU,KAAKN,UAAL,CAAgBW,MAA9B;AACA,YAAID,WAAW,KAAKR,WAAL,CAAiBS,MAAhC;AACA,YAAIL,QAAQiB,MAAR,GAAiB,EAAjB,IAAuBjB,QAAQiB,MAAR,GAAiB,CAA5C,EAA8C;AAC7ChC,eAAGiC,EAAH,CAAMpC,MAAN,CAAaqC,MAAb,CAAoBpC,QAAQqC,gBAA5B;AACA;AACA;AACD,YAAI,KAAKvB,gBAAL,CAAsBwB,SAA1B,EAAqC;AACpCpC,eAAGgB,GAAH,CAAOC,YAAP,CAAoBoB,OAApB,CAA4B,SAA5B,EAAuCtB,OAAvC;AACAf,eAAGgB,GAAH,CAAOC,YAAP,CAAoBoB,OAApB,CAA4B,UAA5B,EAAwClB,QAAxC;AACA;AACD,YAAImB,IAAI,IAAIvC,MAAJ,CAAY,UAAZ,CAAR;AACGuC,UAAEC,KAAF,CAAQxB,OAAR,GAAkBA,OAAlB;AACAuB,UAAEC,KAAF,CAAQpB,QAAR,GAAmBA,QAAnB;AACAnB,WAAGiC,EAAH,CAAMO,GAAN,CAAUC,IAAV,CAAgBH,EAAEI,IAAF,EAAhB;AACH;AAxDI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "// OnLoginLayerLoad.js\nvar common = require('Common')\nvar msgbox = require('Msgbox')\nvar msgcode = require( 'Msgcode' )\nvar packet = require( 'Lpackage' )\n\ncc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        prefabNormalRegister:{\n            default: null,\n            type: cc.Prefab,\n        },\n\n        accountBox : {\n        \tdefault : null,\n        \ttype: cc.EditBox,\n        },\n\n        passwordBox : {\n        \tdefault : null,\n        \ttype: cc.EditBox,\n        },\n\n        rememberCheckBox : cc.Toggle,\n        \n    },\n    onLoad:function() {\n    \tvar account = cc.sys.localStorage.getItem('account');\n    \tvar password = cc.sys.localStorage.getItem('password');\n    \tif (account != null && account != \"\"){\n    \t\tthis.accountBox.string = account;\n    \t\tthis.passwordBox.string = password;\n    \t}\n    },\n    onNormalRegisterClick:function(){\n        var bg = cc.find(\"BgLayer\");\n        let registerlayer = cc.instantiate(this.prefabNormalRegister);  \n        registerlayer.parent = bg;\n        registerlayer.setPosition(0,0);\n    },\n\n    onDistroy:function(){\n    \tthis.node.destroy();\n    },\n\n    onLoginClick: function() {\n    \tvar account = this.accountBox.string;\n    \tvar password = this.passwordBox.string;\n    \tif (account.length > 12 || account.length < 6){\n    \t\tcc.ll.msgbox.addMsg(msgcode.ACCOUNT_TOO_LONG);\n    \t\treturn;\n    \t}\n    \tif (this.rememberCheckBox.isChecked) {\n    \t\tcc.sys.localStorage.setItem('account', account);\n    \t\tcc.sys.localStorage.setItem('password', password);\n    \t}\n    \tvar p = new packet( \"Reqlogin\" );\n        p.lpack.account = account;\n        p.lpack.password = password;\n        cc.ll.net.send( p.pack() );\n    },\n});"
  ]
}