{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": ";AACA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAC9B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAC9B,IAAI,OAAO,GAAG,OAAO,CAAE,SAAS,CAAE,CAAA;AAClC,IAAI,MAAM,GAAG,OAAO,CAAE,UAAU,CAAE,CAAA;;AAElC,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,4BAAoB,EAAC;AACjB,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,MAAM;SAClB;;AAED,kBAAU,EAAG;AACZ,uBAAU,IAAI;AACd,gBAAI,EAAE,EAAE,CAAC,OAAO;SAChB;;AAED,mBAAW,EAAG;AACb,uBAAU,IAAI;AACd,gBAAI,EAAE,EAAE,CAAC,OAAO;SAChB;;AAED,wBAAgB,EAAG,EAAE,CAAC,MAAM;;KAE/B;AACD,UAAM,EAAC,kBAAW;AACjB,YAAI,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACrD,YAAI,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACvD,YAAI,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,EAAE,EAAC;AACpC,gBAAI,CAAC,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC;AACjC,gBAAI,CAAC,WAAW,CAAC,MAAM,GAAG,QAAQ,CAAC;SACnC;KACD;AACD,yBAAqB,EAAC,iCAAU;AAC5B,YAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5B,YAAI,aAAa,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC9D,qBAAa,CAAC,MAAM,GAAG,EAAE,CAAC;AAC1B,qBAAa,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;KAClC;;AAED,aAAS,EAAC,qBAAU;AACnB,YAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;KACpB;;AAED,gBAAY,EAAE,wBAAW;AACxB,YAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AACrC,YAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;AACvC,YAAI,OAAO,CAAC,MAAM,GAAG,EAAE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;AAC7C,kBAAM,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACtD,mBAAO;SACP;AACD,YAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;AACpC,cAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAChD,cAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SAClD;AACD,YAAI,CAAC,GAAG,IAAI,MAAM,CAAE,UAAU,CAAE,CAAC;AAC9B,SAAC,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;AAC1B,SAAC,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,cAAM,CAAC,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAE,CAAC;KAC3B;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "// OnLoginLayerLoad.js\nvar common = require('Common')\nvar msgbox = require('Msgbox')\nvar msgcode = require( 'Msgcode' )\nvar packet = require( 'Lpackage' )\n\ncc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        prefabNormalRegister:{\n            default: null,\n            type: cc.Prefab,\n        },\n\n        accountBox : {\n        \tdefault : null,\n        \ttype: cc.EditBox,\n        },\n\n        passwordBox : {\n        \tdefault : null,\n        \ttype: cc.EditBox,\n        },\n\n        rememberCheckBox : cc.Toggle,\n        \n    },\n    onLoad:function() {\n    \tvar account = cc.sys.localStorage.getItem('account');\n    \tvar password = cc.sys.localStorage.getItem('password');\n    \tif (account != null && account != \"\"){\n    \t\tthis.accountBox.string = account;\n    \t\tthis.passwordBox.string = password;\n    \t}\n    },\n    onNormalRegisterClick:function(){\n        var bg = cc.find(\"BgLayer\");\n        let registerlayer = cc.instantiate(this.prefabNormalRegister);  \n        registerlayer.parent = bg;\n        registerlayer.setPosition(0,0);\n    },\n\n    onDistroy:function(){\n    \tthis.node.destroy();\n    },\n\n    onLoginClick: function() {\n    \tvar account = this.accountBox.string;\n    \tvar password = this.passwordBox.string;\n    \tif (account.length > 12 || account.length < 6){\n    \t\tmsgbox.getInstance().addMsg(msgcode.ACCOUNT_TOO_LONG);\n    \t\treturn;\n    \t}\n    \tif (this.rememberCheckBox.isChecked) {\n    \t\tcc.sys.localStorage.setItem('account', account);\n    \t\tcc.sys.localStorage.setItem('password', password);\n    \t}\n    \tvar p = new packet( \"Reqlogin\" );\n        p.lpack.account = account;\n        p.lpack.password = password;\n        common.send( p.pack() );\n    },\n});"
  ]
}